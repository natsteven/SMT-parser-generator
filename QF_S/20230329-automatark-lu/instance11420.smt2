(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Murphy Berzish, Mitja Kulczynski, Federico Mora, Florin Manea, Joel Day, Dirk Nowotka, Vijay Ganesh, Zhengyang Lu
Generated on: 2020-10-01
Description: Translated from a collection of real-world regex queries, AutomataArk, collected by Loris Dâ€™Antoni and Fang Wang: https://github.com/lorisdanto/automatark
Application: Evaluate solvers on real-world regex queries
Target solver: Z3str3RE, CVC4, OSTRICH, Z3seq, Z3str3, Z3-Trau
Publications: Berzish, M., Kulczynski, M., Mora, F., Manea, F., Day, J. D., Nowotka, D., & Ganesh, V. (2021, July). An SMT solver for regular expressions and linear arithmetic over string length. In CAV 2021.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)

(declare-const X String)
(assert (str.in_re X (re.union (re.++ (str.to_re "/*") (re.* (re.union (re.range "0" "9") (re.comp (re.range "0" "9")))) (str.to_re "*/")) (re.++ (str.to_re "/*") (re.* (re.union (re.* (re.union (str.to_re " ") (str.to_re "\u{9}") (str.to_re "\u{a}") (str.to_re "\u{c}") (str.to_re "\u{d}"))) (re.* re.allchar))) (str.to_re "*/")) (re.++ (str.to_re "//") (re.* re.allchar)) (re.++ (str.to_re "/") (re.* (str.to_re "\u{5c}")) (re.* (re.union (str.to_re "\u{5c}") (str.to_re "d") (str.to_re "D"))) (re.* (str.to_re "\u{5c}")) (str.to_re "/")) (re.++ (re.+ (re.++ (re.* (re.union (str.to_re "\u{d}") (str.to_re "\u{a}") (str.to_re " "))) (str.to_re "//") (re.* (re.union (str.to_re "\u{d}") (str.to_re "\u{a}"))))) (str.to_re "\u{a}")))))
(assert (str.in_re X (re.++ (str.to_re "NSIS_DOWNLOAD") (re.* re.allchar) (str.to_re "User-Agent:") (re.+ (re.union (str.to_re " ") (str.to_re "\u{9}") (str.to_re "\u{a}") (str.to_re "\u{c}") (str.to_re "\u{d}"))) (str.to_re "gpstool.globaladserver.com\u{a}"))))
(assert (str.in_re X (re.++ (str.to_re "Host:") (re.union (str.to_re " ") (str.to_re "\u{9}") (str.to_re "\u{a}") (str.to_re "\u{c}") (str.to_re "\u{d}")) (str.to_re "Hello.") (re.* re.allchar) (str.to_re "forum=\u{a}"))))
(assert (not (str.in_re X (re.++ (re.union (re.++ (str.to_re "NO") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 3 3) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (str.to_re "NO") ((_ re.loop 15 15) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (str.to_re "BE") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (str.to_re "BE") ((_ re.loop 16 16) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "DK") (str.to_re "FO") (str.to_re "FI") (str.to_re "GL") (str.to_re "NL")) ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "DK") (str.to_re "FO") (str.to_re "FI") (str.to_re "GL") (str.to_re "NL")) ((_ re.loop 18 18) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "MK") (str.to_re "SI")) ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 3 3) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "MK") (str.to_re "SI")) ((_ re.loop 19 19) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "BA") (str.to_re "EE") (str.to_re "KZ") (str.to_re "LT") (str.to_re "LU") (str.to_re "AT")) ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "BA") (str.to_re "EE") (str.to_re "KZ") (str.to_re "LT") (str.to_re "LU") (str.to_re "AT")) ((_ re.loop 20 20) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "HR") (str.to_re "LI") (str.to_re "LV") (str.to_re "CH")) ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 1 1) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "HR") (str.to_re "LI") (str.to_re "LV") (str.to_re "CH")) ((_ re.loop 21 21) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "BG") (str.to_re "DE") (str.to_re "IE") (str.to_re "ME") (str.to_re "RS") (str.to_re "GB")) ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "BG") (str.to_re "DE") (str.to_re "IE") (str.to_re "ME") (str.to_re "RS") (str.to_re "GB")) ((_ re.loop 22 22) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "GI") (str.to_re "IL")) ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 3 3) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "GI") (str.to_re "IL")) ((_ re.loop 23 23) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "AD") (str.to_re "CZ") (str.to_re "SA") (str.to_re "RO") (str.to_re "SK") (str.to_re "ES") (str.to_re "SE") (str.to_re "TN")) ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "AD") (str.to_re "CZ") (str.to_re "SA") (str.to_re "RO") (str.to_re "SK") (str.to_re "ES") (str.to_re "SE") (str.to_re "TN")) ((_ re.loop 24 24) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (str.to_re "PT") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 1 1) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (str.to_re "PT") ((_ re.loop 25 25) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "IS") (str.to_re "TR")) ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "IS") (str.to_re "TR")) ((_ re.loop 26 26) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "FR") (str.to_re "GR") (str.to_re "IT") (str.to_re "MC") (str.to_re "SM")) ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 3 3) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "FR") (str.to_re "GR") (str.to_re "IT") (str.to_re "MC") (str.to_re "SM")) ((_ re.loop 27 27) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "AL") (str.to_re "CY") (str.to_re "HU") (str.to_re "LB") (str.to_re "PL")) ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (re.union (str.to_re "AL") (str.to_re "CY") (str.to_re "HU") (str.to_re "LB") (str.to_re "PL")) ((_ re.loop 28 28) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (str.to_re "MU") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (str.to_re "MU") ((_ re.loop 30 30) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (str.to_re "MT") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 4 4) (re.union (re.range "0" "9") (re.range "A" "Z"))) (str.to_re " ") ((_ re.loop 3 3) (re.union (re.range "0" "9") (re.range "A" "Z")))) (re.++ (str.to_re "MT") ((_ re.loop 31 31) (re.union (re.range "0" "9") (re.range "A" "Z"))))) (str.to_re "\u{a}")))))
(check-sat)

(exit)
