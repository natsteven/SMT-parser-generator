(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Murphy Berzish, Mitja Kulczynski, Federico Mora, Florin Manea, Joel Day, Dirk Nowotka, Vijay Ganesh, Zhengyang Lu
Generated on: 2020-10-01
Description: Translated from a collection of real-world regex queries, AutomataArk, collected by Loris Dâ€™Antoni and Fang Wang: https://github.com/lorisdanto/automatark
Application: Evaluate solvers on real-world regex queries
Target solver: Z3str3RE, CVC4, OSTRICH, Z3seq, Z3str3, Z3-Trau
Publications: Berzish, M., Kulczynski, M., Mora, F., Manea, F., Day, J. D., Nowotka, D., & Ganesh, V. (2021, July). An SMT solver for regular expressions and linear arithmetic over string length. In CAV 2021.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)

(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "/filename=") (re.+ (re.range "a" "z")) (str.to_re ".jat/\u{a}"))))
(assert (str.in_re X (re.++ ((_ re.loop 10 10) (re.union (re.range "0" "9") (str.to_re "+"))) (str.to_re "@") (re.+ (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to_re "_"))) (re.opt (str.to_re ".")) (re.+ (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to_re "_"))) (re.opt (str.to_re ".")) (re.+ (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to_re "_"))) (re.opt (str.to_re ".")) ((_ re.loop 2 4) (re.union (str.to_re "+") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to_re "_"))) (str.to_re "/i\u{a}"))))
(assert (str.in_re X (re.++ (re.union (str.to_re "a") (str.to_re "b") (str.to_re "c")) re.allchar (re.* (re.++ (str.to_re "a") re.allchar (str.to_re "b"))) re.allchar (re.+ (str.to_re "b")) re.allchar (str.to_re "c\u{a}"))))
(assert (not (str.in_re X (re.++ (str.to_re "X-Mailer") (re.+ (str.to_re ":")) (str.to_re "/cbn/earchSchwindler\u{a}")))))
(assert (str.in_re X (re.++ (re.union (re.++ (str.to_re "A") (re.union (str.to_re "D") (str.to_re "E") (str.to_re "F") (str.to_re "G") (str.to_re "I") (str.to_re "L") (str.to_re "M") (str.to_re "N") (str.to_re "O") (str.to_re "R") (str.to_re "S") (str.to_re "T") (str.to_re "Q") (str.to_re "U") (str.to_re "W") (str.to_re "X") (str.to_re "Z"))) (re.++ (str.to_re "B") (re.union (str.to_re "A") (str.to_re "B") (str.to_re "D") (str.to_re "E") (str.to_re "F") (str.to_re "G") (str.to_re "H") (str.to_re "I") (str.to_re "J") (str.to_re "L") (str.to_re "M") (str.to_re "N") (str.to_re "O") (str.to_re "R") (str.to_re "S") (str.to_re "T") (str.to_re "V") (str.to_re "W") (str.to_re "Y") (str.to_re "Z"))) (re.++ (str.to_re "C") (re.union (str.to_re "A") (str.to_re "C") (str.to_re "D") (str.to_re "F") (str.to_re "G") (str.to_re "H") (str.to_re "I") (str.to_re "K") (str.to_re "L") (str.to_re "M") (str.to_re "N") (str.to_re "O") (str.to_re "R") (str.to_re "U") (str.to_re "V") (str.to_re "X") (str.to_re "Y") (str.to_re "Z"))) (re.++ (str.to_re "D") (re.union (str.to_re "E") (str.to_re "J") (str.to_re "K") (str.to_re "M") (str.to_re "O") (str.to_re "Z"))) (re.++ (str.to_re "E") (re.union (str.to_re "C") (str.to_re "E") (str.to_re "G") (str.to_re "H") (str.to_re "R") (str.to_re "S") (str.to_re "T"))) (re.++ (str.to_re "F") (re.union (str.to_re "I") (str.to_re "J") (str.to_re "K") (str.to_re "M") (str.to_re "O") (str.to_re "R"))) (re.++ (str.to_re "G") (re.union (str.to_re "A") (str.to_re "B") (str.to_re "D") (str.to_re "E") (str.to_re "F") (str.to_re "G") (str.to_re "H") (str.to_re "I") (str.to_re "L") (str.to_re "M") (str.to_re "N") (str.to_re "P") (str.to_re "Q") (str.to_re "R") (str.to_re "S") (str.to_re "T") (str.to_re "U") (str.to_re "W") (str.to_re "Y"))) (re.++ (str.to_re "H") (re.union (str.to_re "K") (str.to_re "M") (str.to_re "N") (str.to_re "R") (str.to_re "T") (str.to_re "U"))) (re.++ (str.to_re "I") (re.union (str.to_re "D") (str.to_re "E") (str.to_re "Q") (str.to_re "L") (str.to_re "M") (str.to_re "N") (str.to_re "O") (str.to_re "R") (str.to_re "S") (str.to_re "T"))) (re.++ (str.to_re "J") (re.union (str.to_re "E") (str.to_re "M") (str.to_re "O") (str.to_re "P"))) (re.++ (str.to_re "K") (re.union (str.to_re "E") (str.to_re "G") (str.to_re "H") (str.to_re "I") (str.to_re "M") (str.to_re "N") (str.to_re "P") (str.to_re "R") (str.to_re "W") (str.to_re "Y") (str.to_re "Z"))) (re.++ (str.to_re "L") (re.union (str.to_re "A") (str.to_re "B") (str.to_re "C") (str.to_re "I") (str.to_re "K") (str.to_re "R") (str.to_re "S") (str.to_re "T") (str.to_re "U") (str.to_re "V") (str.to_re "Y"))) (re.++ (str.to_re "M") (re.union (str.to_re "A") (str.to_re "C") (str.to_re "D") (str.to_re "E") (str.to_re "F") (str.to_re "G") (str.to_re "H") (str.to_re "K") (str.to_re "L") (str.to_re "M") (str.to_re "N") (str.to_re "O") (str.to_re "Q") (str.to_re "P") (str.to_re "R") (str.to_re "S") (str.to_re "T") (str.to_re "U") (str.to_re "V") (str.to_re "W") (str.to_re "X") (str.to_re "Y") (str.to_re "Z"))) (re.++ (str.to_re "N") (re.union (str.to_re "A") (str.to_re "C") (str.to_re "E") (str.to_re "F") (str.to_re "G") (str.to_re "I") (str.to_re "L") (str.to_re "O") (str.to_re "P") (str.to_re "R") (str.to_re "U") (str.to_re "Z"))) (str.to_re "OM") (re.++ (str.to_re "P") (re.union (str.to_re "A") (str.to_re "E") (str.to_re "F") (str.to_re "G") (str.to_re "H") (str.to_re "K") (str.to_re "L") (str.to_re "M") (str.to_re "N") (str.to_re "R") (str.to_re "S") (str.to_re "T") (str.to_re "W") (str.to_re "Y"))) (str.to_re "QA") (re.++ (str.to_re "R") (re.union (str.to_re "E") (str.to_re "O") (str.to_re "S") (str.to_re "U") (str.to_re "W"))) (re.++ (str.to_re "S") (re.union (str.to_re "A") (str.to_re "B") (str.to_re "C") (str.to_re "D") (str.to_re "E") (str.to_re "G") (str.to_re "H") (str.to_re "I") (str.to_re "J") (str.to_re "K") (str.to_re "L") (str.to_re "M") (str.to_re "N") (str.to_re "O") (str.to_re "R") (str.to_re "T") (str.to_re "V") (str.to_re "Y") (str.to_re "Z"))) (re.++ (str.to_re "T") (re.union (str.to_re "C") (str.to_re "D") (str.to_re "F") (str.to_re "G") (str.to_re "H") (str.to_re "J") (str.to_re "K") (str.to_re "L") (str.to_re "M") (str.to_re "N") (str.to_re "O") (str.to_re "R") (str.to_re "T") (str.to_re "V") (str.to_re "W") (str.to_re "Z"))) (re.++ (str.to_re "U") (re.union (str.to_re "A") (str.to_re "G") (str.to_re "M") (str.to_re "S") (str.to_re "Y") (str.to_re "Z"))) (re.++ (str.to_re "V") (re.union (str.to_re "A") (str.to_re "C") (str.to_re "E") (str.to_re "G") (str.to_re "I") (str.to_re "N") (str.to_re "U"))) (re.++ (str.to_re "W") (re.union (str.to_re "F") (str.to_re "S"))) (re.++ (str.to_re "Y") (re.union (str.to_re "E") (str.to_re "T"))) (re.++ (str.to_re "Z") (re.union (str.to_re "A") (str.to_re "M") (str.to_re "W")))) (str.to_re "\u{a}"))))
(check-sat)

(exit)
