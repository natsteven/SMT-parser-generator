(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Murphy Berzish, Mitja Kulczynski, Federico Mora, Florin Manea, Joel Day, Dirk Nowotka, Vijay Ganesh, Zhengyang Lu
Generated on: 2020-10-01
Description: Translated from a collection of real-world regex queries, AutomataArk, collected by Loris Dâ€™Antoni and Fang Wang: https://github.com/lorisdanto/automatark
Application: Evaluate solvers on real-world regex queries
Target solver: Z3str3RE, CVC4, OSTRICH, Z3seq, Z3str3, Z3-Trau
Publications: Berzish, M., Kulczynski, M., Mora, F., Manea, F., Day, J. D., Nowotka, D., & Ganesh, V. (2021, July). An SMT solver for regular expressions and linear arithmetic over string length. In CAV 2021.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)

(declare-const X String)
(assert (str.in_re X (re.union (re.++ (re.union (re.++ (re.union (re.++ (re.opt (str.to_re "0")) (re.union (str.to_re "1") (str.to_re "3") (str.to_re "5") (str.to_re "7") (str.to_re "8"))) (re.++ (str.to_re "1") (re.union (str.to_re "0") (str.to_re "2")))) (str.to_re "/") (re.union (re.++ (re.opt (re.range "0" "2")) (re.range "1" "9")) (str.to_re "20") (re.++ (str.to_re "3") (re.range "0" "1")))) (re.++ (re.union (re.++ (re.opt (str.to_re "0")) (re.union (str.to_re "4") (str.to_re "6") (str.to_re "9"))) (str.to_re "11")) (str.to_re "/") (re.union (re.++ (re.opt (re.range "0" "2")) (re.range "1" "9")) (str.to_re "20") (str.to_re "30"))) (re.++ (re.opt (str.to_re "0")) (str.to_re "2/") (re.union (re.++ (re.opt (re.range "0" "1")) (re.range "1" "9")) (re.++ (str.to_re "2") (re.range "0" "8"))))) (str.to_re "/") (re.opt (re.union (str.to_re "19") (str.to_re "20"))) ((_ re.loop 2 2) (re.range "0" "9"))) (re.++ (str.to_re "\u{a}") (re.opt (str.to_re "0")) (str.to_re "2/29/") (re.union (re.++ (re.opt (re.union (str.to_re "19") (str.to_re "20"))) (re.union (str.to_re "04") (str.to_re "08") (str.to_re "12") (str.to_re "16") (str.to_re "20") (str.to_re "24") (str.to_re "28") (str.to_re "32") (str.to_re "36") (str.to_re "40") (str.to_re "44") (str.to_re "48") (str.to_re "52") (str.to_re "56") (str.to_re "60") (str.to_re "64") (str.to_re "68") (str.to_re "72") (str.to_re "76") (str.to_re "80") (str.to_re "84") (str.to_re "88") (str.to_re "92") (str.to_re "96"))) (str.to_re "2000"))))))
(check-sat)

(exit)
