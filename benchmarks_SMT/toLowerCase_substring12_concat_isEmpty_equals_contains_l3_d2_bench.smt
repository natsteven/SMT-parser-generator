(declare-fun r10 () String)
(declare-fun r11 () String)
(declare-fun r7 () String)
(declare-fun r8 () String)
(declare-fun r9 () String)
(define-fun-rec str.toLower ((x String)) String
  (ite (= x "")
      ""
      (let ((Head (str.at x 0)))
        (str.++ 
          (ite (and (<= 65 (str.to_code Head)) 
                     (<= (str.to_code Head) 90))
               (str.from_code (+ (str.to_code Head) 32))
               Head)
          (str.toLower (str.substr x 1 (- (str.len x) 1)))))))

(assert r7 )
(assert r8 )
(assert r9 )
(assert r10 )
(assert r11 )
(assert (not (str.contains "A" (str.substr r10  2 2))))
(assert (= "" (str.substr (str.substr r8  0 1) 0 0)))
(assert (not (= "B" (str.substr (str.++ r9 r7 ) 4 6))))
(assert (not (= "" (str.toLower (str.substr r10  1 3)))))
(assert (= "" (str.substr (str.toLower r11 ) 2 2)))
(assert (not (= "" (str.++ r10 r11 ))))
(assert (not (str.contains "B" (str.toLower (str.substr r10  3 3)))))
(assert (not (str.contains "ba" (str.substr (str.substr r10  1 3) 0 1))))
(assert (not (= "AC" (str.substr r8  3 3))))
(assert (str.contains "b" (str.++ r10 r7 (str.toLower r11 ))))
(assert (not (= "" (str.substr r10  2 3))))
(assert (not (= "" (str.++ r9 r7 ))))
(assert (not (str.contains "A" (str.++ r9 r10 ))))
(assert (not (str.contains "bc" (str.toLower r11 ))))
(assert (not (= "B" (str.toLower r10 ))))
(assert (not (str.contains "A" (str.++ "B" r10 ))))
(assert (not (str.contains "AB" (str.toLower (str.substr r10  0 1)))))
(assert (str.contains "a" (str.toLower (str.toLower r11 ))))
(assert (str.contains "a" (str.substr r10  1 3)))
(assert (not (= "a" r11 )))
(assert (not (= "" r10 )))
(assert (str.contains "c" (str.toLower r10 )))
(assert (= "" (str.substr r10  3 3)))
(assert (str.contains "" (str.toLower (str.substr r10  2 3))))
(assert (not (str.contains "aa" (str.++ r11 r7 ))))
(assert (= "" (str.substr (str.substr r8  3 3) 0 0)))
(assert (str.contains "" (str.++ r8 r10 )))
(assert (not (= "B" (str.++ "c" (str.++ r9 r10 )))))
(assert (not (= "" (str.++ "c" r7 ))))
(assert (not (= "ab" (str.toLower r9 ))))
(assert (not (= "" (str.toLower r11 ))))
(assert (str.contains "" (str.toLower (str.toLower r9 ))))
(assert (not (= "" (str.++ (str.substr r11  3 3)(str.toLower r11 )))))
(assert (str.contains "c" (str.toLower r9 )))
(assert (not (= "" (str.++ "b" (str.++ r11 r7 )))))
(assert (not (str.contains "A" (str.toLower (str.substr r10  2 2)))))
(assert (not (= "" (str.substr r10  0 1))))
(assert (not (= "" (str.++ "C" (str.substr r8  3 3)))))
(assert (not (str.contains "aa" (str.substr (str.substr r9  3 3) 0 0))))
(assert (str.contains "" (str.toLower r11 )))
(assert (not (= "A" (str.toLower r9 ))))
(assert (not (= "" (str.++ "A" (str.toLower r11 )))))
(assert (not (= "" (str.substr (str.toLower r11 ) 0 2))))
(assert (not (= "" (str.substr r8  0 1))))
(assert (not (= "" (str.++ "b" (str.++ "c" r7 )))))
(assert (not (= "" (str.++ "a" r7 (str.++ r8 r10 )))))
(assert (not (= "Ac" (str.substr (str.substr r9  3 3) 0 0))))
(assert (not (= "" (str.toLower (str.substr r9  0 1)))))
(assert (not (= "" (str.++ r10 r7 ))))
(assert (not (= "" r7 )))
(assert (str.contains "" r8 ))
(assert (not (= "" (str.++ "a" r7 ))))
(assert (not (= "" (str.substr (str.toLower r9 ) 0 3))))
(assert (not (str.contains "a" (str.toLower (str.substr r9  0 1)))))
(assert (not (= "" (str.++ "c" r9 ))))
(assert (not (= "B" (str.substr (str.++ r11 r7 ) 6 6))))
(assert (not (= "" r9 )))
(assert (not (= "" (str.toLower r11 ))))
(assert (not (= "" (str.++ r10 r11 (str.toLower r10 )))))
(assert (= "" (str.substr r9  3 3)))
(assert (not (= "" (str.toLower (str.toLower r9 )))))
(assert (= "" (str.substr r11  3 3)))
(assert (not (= "aa" (str.substr r9  0 1))))
(assert (not (= "" (str.++ "c" (str.++ r11 r7 )))))
(assert (not (= "" (str.toLower r7 ))))
(check-sat)
