(declare-fun r4 () String)
(declare-fun r5 () String)
(declare-fun r6 () String)
(declare-fun r7 () String)
(declare-fun r8 () String)
(define-fun-rec str.toLower ((x String)) String
  (ite (= x "")
      ""
      (let ((Head (str.at x 0)))
        (str.++ 
          (ite (and (<= 65 (str.to_code Head)) 
                     (<= (str.to_code Head) 90))
               (str.from_code (+ (str.to_code Head) 32))
               Head)
          (str.toLower (str.substr x 1 (- (str.len x) 1)))))))
(define-fun str.del ((x String) (a Int) (b Int)) String
  (str.++ (str.substr x 0 a) (str.substr x b (str.len x))))

(assert (not (= "" (str.++ r6 r5 ))))
(assert (str.contains "C" (str.++ (str.del r5  1 1)(str.replace_all r7  "B"  "A" ))))
(assert (str.contains "B" (str.del (str.replace_all r7  "A"  "B" ) 2 2)))
(assert (not (= "" (str.replace_all (str.++ r6 r5 ) "B"  "C" ))))
(assert (not (= "BC" (str.++ "C" (str.del (str.++ r5 r4 ) 4 6)))))
(assert (str.contains "B" (str.del (str.++ "A" (str.replace_all r5  "A"  "B" )) 2 3)))
(assert (not (= "AC" (str.del (str.del (str.++ "B" r7 ) 4 4) 1 3))))
(assert (str.contains "" (str.++ r6 r4 )))
(assert (not (= "" (str.++ "B" (str.replace_all r7  "B"  "A" )(str.replace_all (str.++ "C" r7 ) "A"  "B" )))))
(assert (str.contains "" (str.del (str.++ (str.del r5  1 1)(str.replace_all r7  "B"  "A" )) 6 6)))
(assert (not (str.contains "CB" (str.++ "A" (str.del (str.replace_all r7  "B"  "A" ) 3 3)))))
(assert (not (= "" (str.del r6  3 3))))
(assert (not (= "C" r4 )))
(assert (not (= "BC" (str.del (str.del r8  1 3) 0 1))))
(assert (not (str.contains "BC" (str.del r5  0 2))))
(assert (not (= "" (str.replace_all (str.replace_all r8  "B"  "C" ) "B"  "A" ))))
(assert (not (= "CA" (str.replace_all r4  "A"  "C" ))))
(assert (not (= "" (str.++ "B" (str.replace_all r7  "B"  "A" )))))
(assert (str.contains "B" (str.replace_all (str.++ "B" r7 ) "C"  "B" )))
(assert (str.contains "" (str.replace_all r5  "A"  "B" )))
(assert (str.contains "C" (str.++ "B" (str.del (str.replace_all r7  "B"  "A" ) 3 3))))
(assert (str.contains "" (str.del (str.replace_all r7  "A"  "B" ) 3 3)))
(assert (= "" (str.replace_all (str.del (str.replace_all r5  "B"  "C" ) 0 3) "B"  "A" )))
(assert (not (= "" (str.++ "C" r4 ))))
(assert (not (= "" (str.del (str.++ r5 r4 ) 4 6))))
(assert (not (= "" (str.replace_all r5  "B"  "C" ))))
(assert (not (= "" (str.++ r5 r4 ))))
(assert (not (= "" (str.del r7  3 3))))
(assert (not (str.contains "C" (str.del r8  2 3))))
(assert (not (= "BA" (str.++ "C" (str.replace_all r4  "A"  "C" )))))
(assert (not (= "" (str.++ "A" (str.++ "C" r7 )))))
(assert (not (= "" (str.replace_all r6  "C"  "A" ))))
(assert (not (= "" (str.++ (str.replace_all r5  "B"  "A" )(str.replace_all r8  "B"  "C" )))))
(assert (not (str.contains "A" (str.replace_all (str.++ "C" r7 ) "A"  "B" ))))
(assert (str.contains "" (str.del r8  1 3)))
(assert (not (= "" r6 )))
(assert (not (= "A" (str.++ "B" r8 ))))
(assert (not (str.contains "CB" (str.del r6  2 3))))
(assert (str.contains "" (str.replace_all (str.del (str.replace_all r7  "A"  "B" ) 3 3) "B"  "A" )))
(assert (not (= "BB" (str.++ "C" r7 ))))
(assert (not (= "" (str.replace_all r4  "A"  "B" ))))
(assert (str.contains "" (str.del (str.++ "B" r7 ) 4 4)))
(assert (not (str.contains "B" (str.replace_all (str.++ (str.replace_all r5  "B"  "A" )(str.replace_all r8  "B"  "C" )) "A"  "C" ))))
(assert (not (= "" (str.++ "A" (str.replace_all r5  "A"  "B" )))))
(assert (not (= "" (str.del (str.replace_all (str.del r6  3 3) "B"  "C" ) 1 2))))
(assert (not (= "A" (str.del (str.++ "A" (str.++ "C" r7 )) 2 4))))
(assert (not (= "" r8 )))
(assert (str.contains "" (str.replace_all r7  "B"  "A" )))
(assert (not (= "A" (str.++ "B" r5 ))))
(assert (not (= "" (str.del (str.replace_all (str.del r6  3 3) "B"  "C" ) 3 3))))
(assert (not (= "" r5 )))
(assert (not (= "" (str.replace_all (str.replace_all (str.++ "C" r7 ) "A"  "B" ) "C"  "B" ))))
(assert (not (= "AA" (str.del r6  2 3))))
(assert (not (= "A" (str.del (str.replace_all (str.replace_all r8  "B"  "C" ) "B"  "A" ) 1 2))))
(assert (not (str.contains "AC" (str.replace_all (str.del r6  3 3) "B"  "C" ))))
(assert (not (= "" (str.++ "C" (str.++ "B" (str.replace_all r8  "B"  "C" ))))))
(assert (not (= "AC" (str.++ r4 r7 ))))
(assert (not (= "" (str.replace_all (str.del (str.del r6  2 3) 1 2) "A"  "B" ))))
(assert (not (= "" (str.replace_all r5  "B"  "A" ))))
(assert (not (= "CC" (str.replace_all (str.++ r6 r5 ) "B"  "C" ))))
(assert (not (= "" (str.del (str.++ r6 r4 ) 5 5))))
(assert (not (= "" (str.replace_all (str.replace_all (str.replace_all r5  "B"  "A" ) "B"  "A" ) "C"  "B" ))))
(assert (not (= "" (str.del r6  1 3))))
(assert (not (= "" (str.replace_all (str.del (str.++ r6 r4 ) 5 5) "A"  "C" ))))
(assert (not (= "" (str.replace_all (str.++ (str.del r5  1 1)(str.replace_all r7  "B"  "A" )) "A"  "C" ))))
(assert (not (= "" (str.del r5  1 1))))
(assert (not (= "" (str.del (str.del r6  2 3) 1 2))))
(assert (str.contains "A" r7 ))
(assert (str.contains "" (str.++ (str.del r8  2 3)(str.++ "C" r7 ))))
(assert (not (= "" (str.replace_all (str.replace_all (str.++ r6 r5 ) "B"  "C" ) "C"  "B" ))))
(assert (not (= "" (str.replace_all r8  "B"  "C" ))))
(assert (not (= "AC" (str.replace_all r7  "A"  "B" ))))
(assert (str.contains "" (str.++ "B" (str.++ r6 r4 ))))
(assert (not (= "AB" (str.replace_all (str.del r6  3 3) "A"  "B" ))))
(assert (not (= "" (str.++ (str.replace_all (str.del r6  3 3) "B"  "C" )(str.del (str.replace_all r7  "B"  "A" ) 3 3)))))
(assert (not (str.contains "BB" (str.del (str.replace_all (str.++ r6 r5 ) "B"  "C" ) 5 6))))
(assert (not (= "B" (str.replace_all (str.del (str.replace_all r5  "B"  "C" ) 0 3) "A"  "B" ))))
(assert (not (str.contains "A" (str.del (str.del (str.replace_all r5  "B"  "C" ) 0 3) 0 0))))
(assert (str.contains "" (str.del (str.replace_all r5  "B"  "C" ) 0 3)))
(assert (not (= "" (str.del (str.replace_all r7  "B"  "A" ) 3 3))))
(assert (not (= "" (str.++ (str.del (str.++ "B" r7 ) 4 4)(str.del (str.replace_all r7  "A"  "B" ) 3 3)))))
(assert (str.contains "A" (str.++ "C" r8 )))
(assert (not (= "BB" (str.replace_all (str.del r7  3 3) "C"  "A" ))))
(assert (not (= "" (str.++ "C" (str.del (str.del r6  2 3) 1 2)))))
(assert (not (str.contains "BA" (str.++ (str.del (str.replace_all r7  "A"  "B" ) 2 2)(str.++ "A" (str.++ "C" r7 ))))))
(assert (not (= "A" (str.replace_all (str.del r6  1 3) "C"  "A" ))))
(assert (not (= "B" (str.del (str.replace_all (str.del r6  3 3) "B"  "C" ) 1 2))))
(assert (not (= "" (str.del r4  3 3))))
(assert (not (= "BC" (str.replace_all (str.replace_all r5  "B"  "A" ) "B"  "A" ))))
(assert (str.contains "C" (str.replace_all r7  "B"  "A" )))
(assert (str.contains "" (str.++ (str.replace_all (str.del r6  3 3) "A"  "B" )(str.replace_all (str.del r6  1 3) "C"  "A" ))))
(assert (not (str.contains "BC" (str.++ "B" r7 ))))
(assert (not (= "CB" (str.++ "B" (str.replace_all r8  "B"  "C" )))))
(assert (not (= "" (str.++ r5 r4 (str.replace_all r5  "B"  "C" )))))
(assert (not (= "" (str.del (str.del r6  2 3) 2 2))))
(check-sat)
