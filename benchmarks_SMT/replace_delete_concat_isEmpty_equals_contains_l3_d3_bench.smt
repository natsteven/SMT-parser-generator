(set-logic QF_S)
(set-option :produce-models true)
(declare-fun r4 () String)
(declare-fun r5 () String)
(declare-fun r6 () String)
(declare-fun r7 () String)
(declare-fun r8 () String)
(define-fun str.del ((x String) (a Int) (b Int)) String
  (str.++ (str.substr x 0 a) (str.substr x b (str.len x))))

(assert (not (= "" (str.++ r6 r5 ))))
(assert (str.contains (str.++ (str.del r5  1 1)(str.replace_all r7  "B"  "A" ))"C" ))
(assert (str.contains (str.del (str.replace_all r7  "A"  "B" ) 2 2)"B" ))
(assert (not (= "" (str.replace_all (str.++ r6 r5 ) "B"  "C" ))))
(assert (not (= (str.++ "C" (str.del (str.++ r5 r4 ) 4 6))"BC" )))
(assert (str.contains (str.del (str.++ "A" (str.replace_all r5  "A"  "B" )) 2 3)"B" ))
(assert (not (= (str.del (str.del (str.++ "B" r7 ) 4 4) 1 3)"AC" )))
(assert (str.contains (str.++ r6 r4 )"" ))
(assert (not (= "" (str.++ "B" (str.replace_all r7  "B"  "A" )(str.replace_all (str.++ "C" r7 ) "A"  "B" )))))
(assert (str.contains (str.del (str.++ (str.del r5  1 1)(str.replace_all r7  "B"  "A" )) 6 6)"" ))
(assert (not (str.contains (str.++ "A" (str.del (str.replace_all r7  "B"  "A" ) 3 3))"CB" )))
(assert (not (= "" (str.del r6  3 3))))
(assert (not (= r4 "C" )))
(assert (not (= (str.del (str.del r8  1 3) 0 1)"BC" )))
(assert (not (str.contains (str.del r5  0 2)"BC" )))
(assert (not (= "" (str.replace_all (str.replace_all r8  "B"  "C" ) "B"  "A" ))))
(assert (not (= (str.replace_all r4  "A"  "C" )"CA" )))
(assert (not (= "" (str.++ "B" (str.replace_all r7  "B"  "A" )))))
(assert (str.contains (str.replace_all (str.++ "B" r7 ) "C"  "B" )"B" ))
(assert (str.contains (str.replace_all r5  "A"  "B" )"" ))
(assert (str.contains (str.++ "B" (str.del (str.replace_all r7  "B"  "A" ) 3 3))"C" ))
(assert (str.contains (str.del (str.replace_all r7  "A"  "B" ) 3 3)"" ))
(assert (= (str.replace_all (str.del (str.replace_all r5  "B"  "C" ) 0 3) "B"  "A" )"" ))
(assert (not (= "" (str.++ "C" r4 ))))
(assert (not (= "" (str.del (str.++ r5 r4 ) 4 6))))
(assert (not (= "" (str.replace_all r5  "B"  "C" ))))
(assert (not (= "" (str.++ r5 r4 ))))
(assert (not (= "" (str.del r7  3 3))))
(assert (not (str.contains (str.del r8  2 3)"C" )))
(assert (not (= (str.++ "C" (str.replace_all r4  "A"  "C" ))"BA" )))
(assert (not (= (str.++ "A" (str.++ "C" r7 ))"" )))
(assert (not (= (str.replace_all r6  "C"  "A" )"" )))
(assert (not (= "" (str.++ (str.replace_all r5  "B"  "A" )(str.replace_all r8  "B"  "C" )))))
(assert (not (str.contains (str.replace_all (str.++ "C" r7 ) "A"  "B" )"A" )))
(assert (str.contains (str.del r8  1 3)"" ))
(assert (not (= r6 "" )))
(assert (not (= (str.++ "B" r8 )"A" )))
(assert (not (str.contains (str.del r6  2 3)"CB" )))
(assert (str.contains (str.replace_all (str.del (str.replace_all r7  "A"  "B" ) 3 3) "B"  "A" )"" ))
(assert (not (= (str.++ "C" r7 )"BB" )))
(assert (not (= (str.replace_all r4  "A"  "B" )"" )))
(assert (str.contains (str.del (str.++ "B" r7 ) 4 4)"" ))
(assert (not (str.contains (str.replace_all (str.++ (str.replace_all r5  "B"  "A" )(str.replace_all r8  "B"  "C" )) "A"  "C" )"B" )))
(assert (not (= "" (str.++ "A" (str.replace_all r5  "A"  "B" )))))
(assert (not (= "" (str.del (str.replace_all (str.del r6  3 3) "B"  "C" ) 1 2))))
(assert (not (= (str.del (str.++ "A" (str.++ "C" r7 )) 2 4)"A" )))
(assert (not (= "" r8 )))
(assert (str.contains (str.replace_all r7  "B"  "A" )"" ))
(assert (not (= (str.++ "B" r5 )"A" )))
(assert (not (= "" (str.del (str.replace_all (str.del r6  3 3) "B"  "C" ) 3 3))))
(assert (not (= "" r5 )))
(assert (not (= "" (str.replace_all (str.replace_all (str.++ "C" r7 ) "A"  "B" ) "C"  "B" ))))
(assert (not (= (str.del r6  2 3)"AA" )))
(assert (not (= (str.del (str.replace_all (str.replace_all r8  "B"  "C" ) "B"  "A" ) 1 2)"A" )))
(assert (not (str.contains (str.replace_all (str.del r6  3 3) "B"  "C" )"AC" )))
(assert (not (= "" (str.++ "C" (str.++ "B" (str.replace_all r8  "B"  "C" ))))))
(assert (not (= (str.++ r4 r7 )"AC" )))
(assert (not (= (str.replace_all (str.del (str.del r6  2 3) 1 2) "A"  "B" )"" )))
(assert (not (= "" (str.replace_all r5  "B"  "A" ))))
(assert (not (= (str.replace_all (str.++ r6 r5 ) "B"  "C" )"CC" )))
(assert (not (= (str.del (str.++ r6 r4 ) 5 5)"" )))
(assert (not (= "" (str.replace_all (str.replace_all (str.replace_all r5  "B"  "A" ) "B"  "A" ) "C"  "B" ))))
(assert (not (= "" (str.del r6  1 3))))
(assert (not (= "" (str.replace_all (str.del (str.++ r6 r4 ) 5 5) "A"  "C" ))))
(assert (not (= (str.replace_all (str.++ (str.del r5  1 1)(str.replace_all r7  "B"  "A" )) "A"  "C" )"" )))
(assert (not (= "" (str.del r5  1 1))))
(assert (not (= "" (str.del (str.del r6  2 3) 1 2))))
(assert (str.contains r7 "A" ))
(assert (str.contains (str.++ (str.del r8  2 3)(str.++ "C" r7 ))"" ))
(assert (not (= "" (str.replace_all (str.replace_all (str.++ r6 r5 ) "B"  "C" ) "C"  "B" ))))
(assert (not (= "" (str.replace_all r8  "B"  "C" ))))
(assert (not (= (str.replace_all r7  "A"  "B" )"AC" )))
(assert (str.contains (str.++ "B" (str.++ r6 r4 ))"" ))
(assert (not (= (str.replace_all (str.del r6  3 3) "A"  "B" )"AB" )))
(assert (not (= (str.++ (str.replace_all (str.del r6  3 3) "B"  "C" )(str.del (str.replace_all r7  "B"  "A" ) 3 3))"" )))
(assert (not (str.contains (str.del (str.replace_all (str.++ r6 r5 ) "B"  "C" ) 5 6)"BB" )))
(assert (not (= (str.replace_all (str.del (str.replace_all r5  "B"  "C" ) 0 3) "A"  "B" )"B" )))
(assert (not (str.contains (str.del (str.del (str.replace_all r5  "B"  "C" ) 0 3) 0 0)"A" )))
(assert (str.contains (str.del (str.replace_all r5  "B"  "C" ) 0 3)"" ))
(assert (not (= "" (str.del (str.replace_all r7  "B"  "A" ) 3 3))))
(assert (not (= "" (str.++ (str.del (str.++ "B" r7 ) 4 4)(str.del (str.replace_all r7  "A"  "B" ) 3 3)))))
(assert (str.contains (str.++ "C" r8 )"A" ))
(assert (not (= (str.replace_all (str.del r7  3 3) "C"  "A" )"BB" )))
(assert (not (= "" (str.++ "C" (str.del (str.del r6  2 3) 1 2)))))
(assert (not (str.contains (str.++ (str.del (str.replace_all r7  "A"  "B" ) 2 2)(str.++ "A" (str.++ "C" r7 )))"BA" )))
(assert (not (= (str.replace_all (str.del r6  1 3) "C"  "A" )"A" )))
(assert (not (= (str.del (str.replace_all (str.del r6  3 3) "B"  "C" ) 1 2)"B" )))
(assert (not (= (str.del r4  3 3)"" )))
(assert (not (= (str.replace_all (str.replace_all r5  "B"  "A" ) "B"  "A" )"BC" )))
(assert (str.contains (str.replace_all r7  "B"  "A" )"C" ))
(assert (str.contains (str.++ (str.replace_all (str.del r6  3 3) "A"  "B" )(str.replace_all (str.del r6  1 3) "C"  "A" ))"" ))
(assert (not (str.contains (str.++ "B" r7 )"BC" )))
(assert (not (= (str.++ "B" (str.replace_all r8  "B"  "C" ))"CB" )))
(assert (not (= "" (str.++ r5 r4 (str.replace_all r5  "B"  "C" )))))
(assert (not (= "" (str.del (str.del r6  2 3) 2 2))))
(check-sat)
(get-model)
(exit)
