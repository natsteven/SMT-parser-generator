(set-logic QF_S)
(set-option :produce-models true)
(declare-fun r4 () String)
(declare-fun r5 () String)
(declare-fun r6 () String)
(declare-fun r7 () String)
(declare-fun r8 () String)

(assert (not (= (str.++ "A" r8 )"B" )))
(assert (not (= (str.++ "A" (str.replace_all r4  "A"  "C" ))"B" )))
(assert (not (str.contains (str.replace_all (str.replace_all (str.++ r4 r5 ) "A"  "C" ) "C"  "A" )"CB" )))
(assert (not (= "" (str.replace_all (str.replace_all (str.++ "A" r8 ) "C"  "B" ) "A"  "B" ))))
(assert (not (= "" (str.replace_all r8  "B"  "C" ))))
(assert (not (= (str.replace_all r4  "A"  "C" )"" )))
(assert (not (= "" (str.replace_all r7  "A"  "B" ))))
(assert (not (= (str.++ "A" (str.replace_all r4  "A"  "C" )(str.replace_all (str.++ "A" r8 ) "B"  "C" ))"" )))
(assert (not (= (str.++ "A" (str.++ "B" r8 ))"" )))
(assert (not (= "" (str.++ "A" (str.replace_all (str.++ r4 r5 ) "A"  "B" )))))
(assert (not (str.contains (str.++ "B" r8 )"AB" )))
(assert (str.contains (str.replace_all (str.++ "A" r8 ) "C"  "B" )"B" ))
(assert (not (= (str.++ "B" (str.replace_all r4  "A"  "B" ))"A" )))
(assert (not (= "" (str.replace_all r5  "C"  "A" ))))
(assert (not (str.contains (str.++ (str.replace_all (str.replace_all r4  "A"  "C" ) "B"  "A" )(str.++ r4 r5 (str.replace_all r7  "A"  "B" )))"BA" )))
(assert (str.contains (str.replace_all (str.++ r4 r5 ) "A"  "C" )"" ))
(assert (not (= "" (str.replace_all (str.++ "C" (str.++ "B" r6 )) "B"  "C" ))))
(assert (not (str.contains (str.replace_all (str.replace_all r4  "A"  "C" ) "B"  "A" )"BA" )))
(assert (not (= (str.replace_all r7  "A"  "C" )"AC" )))
(assert (not (= (str.++ "A" r4 )"" )))
(assert (not (= (str.++ r5 r8 (str.replace_all r8  "B"  "C" ))"A" )))
(assert (not (= "" (str.replace_all (str.++ r4 r5 ) "A"  "B" ))))
(assert (not (= (str.replace_all (str.++ "B" (str.++ r6 r4 )) "A"  "B" )"" )))
(assert (not (= "" (str.replace_all (str.++ "A" r4 ) "C"  "B" ))))
(assert (not (= "" (str.replace_all (str.replace_all (str.++ "A" r4 ) "C"  "B" ) "C"  "B" ))))
(assert (str.contains (str.replace_all (str.++ r5 r8 (str.replace_all r8  "B"  "C" )) "B"  "C" )"" ))
(assert (str.contains r5 "" ))
(assert (not (= (str.++ "C" (str.++ "B" r6 ))"BB" )))
(assert (not (= "" (str.replace_all r6  "C"  "A" ))))
(assert (str.contains (str.replace_all r6  "A"  "C" )"BC" ))
(assert (not (= "" (str.++ r6 r4 ))))
(assert (not (= r4 "A" )))
(assert (not (= "" (str.++ "B" (str.++ r6 r4 )))))
(assert (not (= "" r6 )))
(assert (not (= "" (str.replace_all (str.replace_all r5  "C"  "A" ) "C"  "A" ))))
(assert (not (= r7 "B" )))
(assert (not (= "" (str.++ r5 r8 ))))
(assert (str.contains (str.++ r4 r5 )"B" ))
(assert (not (str.contains (str.++ "B" r6 )"A" )))
(assert (not (= "" (str.replace_all (str.++ "A" r8 ) "B"  "C" ))))
(assert (not (str.contains (str.replace_all (str.++ "A" (str.++ "B" r8 )) "B"  "A" )"CC" )))
(assert (str.contains (str.++ r7 r6 )"" ))
(assert (not (= (str.replace_all r4  "A"  "C" )"B" )))
(assert (not (= "" (str.replace_all (str.++ r8 r5 ) "C"  "A" ))))
(assert (str.contains (str.replace_all (str.replace_all r5  "C"  "A" ) "C"  "B" )"A" ))
(assert (not (= "" (str.++ (str.replace_all (str.replace_all r5  "C"  "A" ) "C"  "A" )(str.++ "B" (str.replace_all r4  "A"  "B" ))))))
(assert (not (= (str.++ r8 r5 )"" )))
(assert (not (= "" r8 )))
(assert (not (= (str.++ "A" r6 )"A" )))
(assert (str.contains (str.++ "B" (str.++ (str.replace_all r6  "A"  "C" )(str.++ "B" r8 )))"C" ))
(assert (not (str.contains (str.replace_all (str.++ r6 r4 ) "A"  "B" )"AA" )))
(assert (not (= "" (str.++ "A" (str.++ "B" r8 )))))
(assert (not (str.contains (str.++ "B" (str.replace_all r4  "A"  "B" )(str.++ "C" (str.++ "B" r6 )))"AA" )))
(assert (not (= (str.++ "A" (str.++ "B" r8 )(str.replace_all (str.++ r4 r5 ) "A"  "C" ))"" )))
(assert (not (= "" (str.++ (str.replace_all (str.replace_all r4  "A"  "C" ) "B"  "A" )(str.++ r5 r8 (str.replace_all r8  "B"  "C" ))))))
(assert (not (= (str.++ "B" (str.++ "A" r8 ))"A" )))
(assert (not (= (str.replace_all (str.replace_all (str.++ "A" r4 ) "C"  "B" ) "A"  "B" )"CB" )))
(assert (not (= (str.replace_all (str.++ r5 r8 (str.replace_all r8  "B"  "C" )) "A"  "C" )"" )))
(assert (not (str.contains (str.replace_all r4  "A"  "B" )"A" )))
(assert (not (= (str.replace_all (str.++ "B" (str.++ "A" r8 )) "A"  "B" )"C" )))
(assert (not (= (str.++ (str.replace_all r6  "A"  "C" )(str.++ "B" r8 ))"" )))
(assert (not (= "" (str.replace_all r7  "B"  "C" ))))
(assert (not (= (str.++ "A" (str.replace_all r4  "A"  "C" )(str.++ "A" (str.++ "B" r8 )))"C" )))
(assert (not (= "" (str.++ "B" (str.++ (str.replace_all r6  "A"  "C" )(str.++ "B" r8 ))))))
(assert (str.contains (str.++ r4 r5 (str.replace_all r7  "A"  "B" ))"" ))
(check-sat)
(get-model)
(exit)
