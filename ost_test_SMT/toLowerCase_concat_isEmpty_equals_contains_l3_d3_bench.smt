(set-logic QF_S)
(set-option :parse-transducers true)
(set-option :produce-models true)
(define-fun-rec toLower ((x String) (y String)) Bool
   (or (and (= x "") (= y ""))
       (and (not (= x "")) (not (= y ""))
           (= (char.code (str.head y))
               (ite (and (<= 65 (char.code (str.head x)))
                       (<= (char.code (str.head x)) 90))
                   (+ (char.code (str.head x)) 32)
                   (char.code (str.head x))))
           (toLower (str.tail x) (str.tail y))))
)
(declare-fun r5 () String)
(declare-fun r6 () String)
(declare-fun r7 () String)
(declare-fun r8 () String)
(declare-fun r9 () String)
(declare-fun L16  () String)
(declare-fun L38  () String)
(declare-fun L18  () String)
(declare-fun L29  () String)
(declare-fun L46  () String)
(declare-fun L14  () String)
(declare-fun L15  () String)
(declare-fun L37  () String)
(declare-fun L7  () String)
(declare-fun L52  () String)
(declare-fun L5  () String)
(declare-fun L43  () String)
(declare-fun L6  () String)
(declare-fun L11  () String)
(declare-fun L3  () String)
(declare-fun L1  () String)
(declare-fun L2  () String)
(declare-fun L40  () String)
(declare-fun L0  () String)
(assert (toLower (str.++ r7 r5 ) L0 ))
(assert (toLower (str.++ "A" r7 L5 ) L40 ))
(assert (toLower r8  L2 ))
(assert (toLower (str.++ r8 r7 L2 ) L1 ))
(assert (toLower (str.++ r5 r7 ) L3 ))
(assert (toLower L6  L11 ))
(assert (toLower r5  L6 ))
(assert (toLower (str.++ r6 r8 ) L43 ))
(assert (toLower r6  L5 ))
(assert (toLower (str.++ "B" L6 ) L52 ))
(assert (toLower (str.++ r6 r9 ) L7 ))
(assert (toLower r9  L37 ))
(assert (toLower (str.++ "b" (str.++ r6 r9 )) L15 ))
(assert (toLower (str.++ "b" r9 ) L14 ))
(assert (toLower (str.++ "a" (str.++ r5 r7 )) L46 ))
(assert (toLower L7  L29 ))
(assert (toLower r7  L18 ))
(assert (toLower L14  L38 ))
(assert (toLower L0  L16 ))

(assert (not (= "" L0 )))
(assert (not (= "" L1 )))
(assert (not (= "" (str.++ L3 (str.++ "a" (str.++ "A" r7 ))))))
(assert (not (= "" (str.++ L0 (str.++ "A" r7 L5 )))))
(assert (not (= (str.++ L6 (str.++ "A" r7 ))"" )))
(assert (not (= "" r5 )))
(assert (not (= "" L7 )))
(assert (not (= (str.++ "B" L0 )"aA" )))
(assert (not (= (str.++ r8 r7 )"b" )))
(assert (not (= (str.++ "b" (str.++ r6 r9 ))"" )))
(assert (not (= "" L2 )))
(assert (not (= "" L0 )))
(assert (not (= "" L11 )))
(assert (str.contains (str.++ r8 r7 L2 )"" ))
(assert (not (= "" L14 )))
(assert (not (= L15 "" )))
(assert (not (= L16 "A" )))
(assert (not (= "" L18 )))
(assert (str.contains (str.++ "b" r9 )"b" ))
(assert (str.contains (str.++ r5 r7 )"aA" ))
(assert (not (= L6 "b" )))
(assert (str.contains (str.++ r6 r9 )"B" ))
(assert (not (= (str.++ "B" L14 )"b" )))
(assert (not (= "" (str.++ r7 r8 ))))
(assert (not (str.contains (str.++ "a" (str.++ "b" L2 ))"BB" )))
(assert (not (str.contains L5 "AB" )))
(assert (not (= "" (str.++ r5 r7 L6 ))))
(assert (str.contains r7 "Bb" ))
(assert (not (= "" L16 )))
(assert (not (= "" (str.++ r7 r5 ))))
(assert (not (= L6 "Ba" )))
(assert (str.contains (str.++ "b" L2 )"ba" ))
(assert (not (= (str.++ "A" (str.++ "a" (str.++ r5 r7 )))"" )))
(assert (not (= L14 "aA" )))
(assert (not (str.contains (str.++ r5 r7 )"Ab" )))
(assert (str.contains L29 "b" ))
(assert (not (= (str.++ L0 (str.++ "B" L6 ))"" )))
(assert (str.contains L11 "aa" ))
(assert (str.contains (str.++ "A" (str.++ L6 (str.++ "A" r7 )))"aa" ))
(assert (not (= "" (str.++ "a" (str.++ r5 r7 )))))
(assert (not (= r8 "Aa" )))
(assert (not (= L18 "b" )))
(assert (not (= (str.++ "b" r9 (str.++ r6 r9 ))"" )))
(assert (not (= "" L37 )))
(assert (not (= "" r9 )))
(assert (not (= "" L38 )))
(assert (not (= "" L40 )))
(assert (str.contains L3 "" ))
(assert (not (= r6 "" )))
(assert (not (= (str.++ "A" r7 )"" )))
(assert (not (= "" (str.++ r6 r8 ))))
(assert (not (= L43 "a" )))
(assert (str.contains L16 "" ))
(assert (not (= L46 "" )))
(assert (not (= L11 "bA" )))
(assert (str.contains (str.++ "B" L6 )"B" ))
(assert (str.contains L6 "" ))
(assert (str.contains (str.++ "A" r7 L5 )"" ))
(assert (str.contains L52 "" ))
(assert (not (= "" (str.++ L14 L43 ))))
(assert (not (= "" (str.++ r5 r7 ))))
(assert (not (= L2 "aa" )))
(assert (not (= L6 "" )))
(assert (str.contains (str.++ "A" L0 )"" ))
(assert (not (= (str.++ "a" (str.++ "A" r7 ))"a" )))
(check-sat)
(get-model)
(exit)
